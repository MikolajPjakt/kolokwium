name: Advanced CI/CD Pipeline

on:
  push:
    branches-ignore:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm install
      - name: Run tests
        run: npm test

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - name: Run ESLint
        run: npx eslint .

  build:
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: docker build -t myapp:latest .
      - name: Save Docker image
        run: docker save myapp:latest | gzip > myapp.tar.gz
      - name: Upload image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: myapp.tar.gz

  staging:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://example-staging-url.com
    steps:
      - name: Manual approval
        run: echo "Waiting for manual approval..."

  production:
    if: github.ref == 'refs/heads/main'
    needs: staging
    runs-on: ubuntu-latest
    steps:
      - name: Download image
        uses: actions/download-artifact@v3
        with:
          name: docker-image
      - name: Load image
        run: gunzip -c myapp.tar.gz | docker load
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push image
        run: docker tag myapp:latest mydockeruser/myapp:latest && docker push mydockeruser/myapp:latest

  notify:
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Generate report
        run: echo "Build completed at $(date)" > report.txt
      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: report
          path: report.txt
