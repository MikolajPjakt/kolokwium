name: Kolokwium CI/CD Pipeline

on:
  push:
    branches-ignore:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm cache clean --force
      - run: npm ci
      - run: npm run test
      - run: npm run lint

  build-image:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: docker build -t myapp:build .
      - run: docker save myapp:build | gzip > myapp-image.tar.gz
      - uses: actions/upload-artifact@v3
        with:
          name: app-image
          path: myapp-image.tar.gz

  deploy-staging:
    if: github.ref == 'refs/heads/main'
    needs: build-image
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging-example.com
    steps:
      - run: echo "Waiting for staging approval..."

  deploy-production:
    if: github.ref == 'refs/heads/main'
    needs: deploy-staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: app-image
      - run: gunzip -c myapp-image.tar.gz | docker load
      - run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - run: |
          docker tag myapp:build ${{ secrets.DOCKER_USERNAME }}/myapp:prod
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:prod

  finalize:
    needs: deploy-production
    if: always()
    runs-on: ubuntu-latest
    steps:
      - run: echo "Pipeline finished at $(date)" > status.txt
      - uses: actions/upload-artifact@v3
        with:
          name: pipeline-status
          path: status.txt